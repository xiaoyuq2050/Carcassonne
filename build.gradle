apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin:'application'
mainClassName = "edu.cmu.cs.cs214.hw4.gui.Main"

test.testLogging {
  exceptionFormat "full"; events "failed", "passed", "skipped"
}

configurations.all {
    resolutionStrategy {
        force 'org.ow2.asm:asm:5.0.3'
        forcedModules = [ 'org.ow2.asm:asm:5.0.3' ]
    }
}

check.doFirst {
  List<String> missing = new ArrayList<>();
  for (name in [ "domain.pdf", 
                 "system_sequence.pdf",
                 "behavioral_contract.pdf", 
                 "interaction_tile_validation.pdf",
                 "interaction_cloister_scoring.pdf",
                 "object.pdf", 
                 "rationale.pdf", 
                 "README.md" ]) {
    String path = "design_documents" + File.separator + name;
    if (!file(path).exists()) {
      missing.add(path);
    }
  }
  if (missing.size() != 0) {
    String message = "The following files were missing:\n\n\t";
    message += String.join("\n\t", missing);
    message += "\n\nPlease check the expected file names in the handout.";
    throw new GradleException(message);
  }
}

repositories {
  mavenCentral()
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.11'
  compile group: 'org.yaml', name: 'snakeyaml', version: '1.18'
}

checkstyle {
  ignoreFailures = true
  toolVersion = "8.7"
  sourceSets = [sourceSets.main]
}

findbugs {
  ignoreFailures = true
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled false
    html.enabled true
  }
}

buildscript {
  repositories {
    mavenCentral()
  }
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.destination file("${buildDir}/reports/coverage")
  }
}
